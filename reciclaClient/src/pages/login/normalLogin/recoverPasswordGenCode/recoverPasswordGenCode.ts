import { Component, Output, EventEmitter, Inject } from '@angular/core';
import { FormBuilder, FormGroup, AbstractControl } from '@angular/forms';
import { LoadingController, Loading } from 'ionic-angular';
import { UserProvider } from '../../../../providers/api/userProvider';
import { NotificationProvider } from '../../../../providers/notifications';
import { ApplicationConfig, APP_CONFIG_TOKEN } from '../../../../app/app-config';
import { MyMail } from '../../../../models/myMail';

@Component({
    selector: 'page-recoverPasswordGenCode',
    templateUrl: 'recoverPasswordGenCode.html'
})
export class RecoverPasswordGenCodePage {

    defaultPage: string = 'code'
    email: any
    password: any
    password_repeat: any
    generateCodeForm: FormGroup
    loading: Loading

    @Output() onRegisterFinishEvent: EventEmitter<any> = new EventEmitter<any>();

    constructor(
        private formBuilder: FormBuilder,
        private userProvider: UserProvider,
        private notificationProvider: NotificationProvider,
        private loadingCtrl: LoadingController,
        @Inject(APP_CONFIG_TOKEN) private config: ApplicationConfig
    ) {
        this.generateCodeForm = this.formBuilder.group({
            email: ['']
        }, {
                validator: [RecoverPasswordGenCodePage.EmailIsValid]
            });
    }

    public setDefaultPage(defaultPage: string) { //EventEmitter
        this.defaultPage = defaultPage
    }


    public register_Button() {
        this.loading = this.loadingCtrl.create({
            content: 'Cargando...'
        });
        this.loading.present()

        var emailForm = this.generateCodeForm.get("email")

        var myMail: MyMail = new MyMail()
        myMail.from = this.config.emailFrom
        myMail.fromName = this.config.emailFromName
        myMail.fromPassword = this.config.emailFromPassword
        myMail.message = null /* code is generated by sever */
        myMail.subject = "Recuperar contraseña"
        myMail.to = emailForm.value


        this.userProvider.sendRecoverMail(myMail).subscribe(res => {
            this.loading.dismiss()
            this.notificationProvider.presentBottomToast("Se ha generado un código, por favor revisa el correo")
            this.defaultPage = 'resetPwd'
        }, error => {
            this.loading.dismiss()
            this.notificationProvider.presentTopToast(this.config.defaultTimeoutMsg)
        })

    }

    static EmailIsValid(control: FormGroup) {

        let email: AbstractControl = control.controls.email; // to get value in input tag

        var EMAIL_REGEXP = /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/i;

        if (control.value != "" && (control.value.length <= 5 || !EMAIL_REGEXP.test(email.value))) {
            email.setErrors({ EmailIsValid: true })
        }
        else {
            return null
        }
    }
}