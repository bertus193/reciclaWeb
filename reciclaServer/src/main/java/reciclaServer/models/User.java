package reciclaServer.models;

import com.fasterxml.jackson.annotation.*;
import reciclaServer.config.EntityIdResolver;

import javax.persistence.*;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.List;
import java.util.concurrent.TimeUnit;

@Entity
@Table(name = "users")
@JsonIdentityInfo(
        generator = ObjectIdGenerators.PropertyGenerator.class,
        resolver = EntityIdResolver.class,
        scope = User.class,
        property = "id")
public class User {

    // An autogenerated id (unique for each user in the db)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    private String email;

    private String password;

    private String username;

    private String fullName;

    private String profilePicture;

    private String accessToken;

    @JsonFormat(pattern="yyyy-MM-dd'T'HH:mm:ss.SSSXXX") //Formato necesario para panel admin (new Date())
    private Timestamp createdDate;

    @Enumerated(EnumType.STRING) //Fix: by default enums are persisted as int using oridinal
    private EnumUser type;

    @ManyToOne
    @JoinColumn(name = "last_position")
    private Position lastPosition;

    @OneToMany(mappedBy = "recycleUser")
    @JsonIdentityReference(alwaysAsId = true)
    private List<RecycleItem> recycleItems;

    private int points;

    private int gamePoints;

    @JsonFormat(pattern="yyyy-MM-dd'T'HH:mm:ss.SSSXXX") //Formato necesario para panel admin (new Date())
    private Timestamp lastGameDate;

    @OneToMany(mappedBy = "user")
    @Transient
    private List<UserQuestion> questionsDone;

    private boolean enabled;

    @ManyToOne
    @JoinColumn(name = "collective")
    private Collective collective;


    @JsonFormat(pattern="yyyy-MM-dd'T'HH:mm:ss.SSSXXX") //Formato necesario para panel admin (new Date())
    private Timestamp birthdate;

    private String school;

    @Enumerated(EnumType.STRING) //Fix: by default enums are persisted as int using oridinal
    private EnumGender gender;

    private String resetPwdCode;

    @JsonFormat(pattern="yyyy-MM-dd'T'HH:mm:ss.SSSXXX") //Formato necesario para panel admin (new Date())
    private Timestamp resetPwdCodeDate;


    public User() { //Needed for JPA

    }

    @JsonIgnore
    public long getHoursDifferenceToPlay() {
        LocalDateTime ldt = LocalDateTime.now();
        ZonedDateTime zdt = ZonedDateTime.of(ldt, ZoneId.systemDefault());
        ZonedDateTime gmt = zdt.withZoneSameInstant(ZoneId.of("GMT"));
        Timestamp timeNow = Timestamp.valueOf(gmt.toLocalDateTime());

        ldt = this.getLastGameDate().toLocalDateTime();
        zdt = ZonedDateTime.of(ldt, ZoneId.systemDefault());
        gmt = zdt.withZoneSameInstant(ZoneId.of("GMT"));
        Timestamp timeUser = Timestamp.valueOf(gmt.toLocalDateTime());


        long diff = timeNow.getTime() - timeUser.getTime();
        return TimeUnit.HOURS.convert(diff, TimeUnit.MILLISECONDS);
    }

    @JsonIgnore
    public void resetUserPwdCode(Timestamp userPwdRcverDate){
        Timestamp now = new Timestamp(System.currentTimeMillis());
        long diff = (now.getTime() - userPwdRcverDate.getTime()) / (60 * 60 * 1000);
        if(diff >= 24){
            this.setResetPwdCodeDate(null);
            this.setResetPwdCode(null);
        }
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public String getProfilePicture() {
        return profilePicture;
    }

    public void setProfilePicture(String profilePicture) {
        this.profilePicture = profilePicture;
    }

    public String getAccessToken() {
        return accessToken;
    }

    public void setAccessToken(String accessToken) {
        this.accessToken = accessToken;
    }

    public void setRecycleItems(List<RecycleItem> recycleItems) {
        this.recycleItems = recycleItems;
    }

    public Timestamp getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(Timestamp createdDate) {
        this.createdDate = createdDate;
    }

    public List<RecycleItem> getRecycleItems() {
        return recycleItems;
    }

    public Position getLastPosition() {
        return lastPosition;
    }

    public void setLastPosition(Position lastPosition) {
        this.lastPosition = lastPosition;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public EnumUser getType() {
        return type;
    }

    public void setType(EnumUser type) {
        this.type = type;
    }

    public int getPoints() {
        return points;
    }

    public void setPoints(int points) {
        this.points = points;
    }

    public int getGamePoints() {
        return gamePoints;
    }

    public void setGamePoints(int gamePoints) {
        this.gamePoints = gamePoints;
    }

    public Timestamp getLastGameDate() {
        return lastGameDate;
    }

    public void setLastGameDate(Timestamp lastGameDate) {
        this.lastGameDate = lastGameDate;
    }

    public List<UserQuestion> getQuestionsDone() {
        return questionsDone;
    }

    public void setQuestionsDone(List<UserQuestion> questionsDone) {
        this.questionsDone = questionsDone;
    }

    public boolean isEnabled() {
        return enabled;
    }

    public void setEnabled(boolean enabled) {
        this.enabled = enabled;
    }

    public Collective getCollective() {
        return collective;
    }

    public void setCollective(Collective collective) {
        this.collective = collective;
    }

    public Timestamp getBirthdate() {
        return birthdate;
    }

    public void setBirthdate(Timestamp birthdate) {
        this.birthdate = birthdate;
    }

    public String getSchool() {
        return school;
    }

    public void setSchool(String school) {
        this.school = school;
    }

    public EnumGender getGender() {
        return gender;
    }

    public void setGender(EnumGender gender) {
        this.gender = gender;
    }

    public String getResetPwdCode() {
        return resetPwdCode;
    }

    public void setResetPwdCode(String resetPwdCode) {
        this.resetPwdCode = resetPwdCode;
    }

    public Timestamp getResetPwdCodeDate() {
        return resetPwdCodeDate;
    }

    public void setResetPwdCodeDate(Timestamp resetPwdCodeDate) {
        this.resetPwdCodeDate = resetPwdCodeDate;
    }
}
